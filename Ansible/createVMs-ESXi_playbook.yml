---
- name: Erstellen von VMs auf einem ESXi-Host
  hosts: localhost
  gather_facts: false
  vars_files:
    - ./serverlist.yml
    - ./accounts.yml

  tasks:
    - name: VMs erstellen basierend auf der Konfigurationsdatei
      community.vmware.vmware_guest:
        hostname: "{{ esxi_hostname }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        validate_certs: no
        name: "{{ item.vm_name }}"
        state: present
        folder: "/"
        guest_id: "{{ item.guest_id }}"
        datacenter: "{{ item.datacenter_name }}"
        datastore: "{{ item.datastore_name }}"
        disk:
          - size_gb: "{{ item.disk_size }}"
            type: thin
            datastore: "{{ item.datastore_name }}"
        hardware:
          memory_mb: "{{ item.memory }}"
          num_cpus: "{{ item.vcpus }}"
          scsi: lsilogicsas
          secure_boot: true
          boot_firmware: "efi"
        networks:
          - name: "{{ item.network[0].name }}"
            device_type: e1000e
      delegate_to: localhost
      loop: "{{ vm_configurations }}"
      when: vm_configurations | length > 0
      register: vm_creation_results

    - name: Setze das Hinweisfeld der VM mit Erstellungsdatum, User, Installation und Rollen
      ignore_errors: true
      community.vmware.vmware_guest:
        hostname: "{{ esxi_hostname }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        validate_certs: no
        name: "{{ item.vm_name }}"
        datacenter: "{{ item.datacenter_name }}"
        folder: "/{{ item.datacenter_name }}/"  # Stellen Sie sicher, dass dieser Pfad korrekt ist
        annotation: >-
          Erstellt durch Ansible-Playbook am: {{ ansible_date_time.date }} {{ ansible_date_time.time }},
          Ersteller: {{ ansible_env.USER }},
          Installation: {{ item.deployment }},
          Rollen: {{ item.role }},
          Domain: {{ item.domain }},
          IP: {{ item.ip }},
          VLAN: {{ item.network }}
        state: present
      delegate_to: localhost
      loop: "{{ vm_configurations }}"
      when: vm_creation_results is changed

    - name: warten
      pause:
        seconds: 30